pipeline {
    agent any

    stages {
        stage('Run Storage Pipeline') {
            steps {
                script {
                    def storageResult = build job: 'OCI_to_Azure', wait: true
                    println "Storage Pipeline result: ${storageResult.result}"

                    if (storageResult.result != 'SUCCESS') {
                        error('Storage Pipeline failed')
                    }
                }
            }
        }

        stage('Run VNets Pipeline') {
            steps {
                script {
                    def vnetsResult = build job: 'VNets_Pipeline', wait: true
                    println "VNets Pipeline result: ${vnetsResult.result}"

                    if (vnetsResult.result != 'SUCCESS') {
                        error('VNets Pipeline failed')
                    }
                }
            }
        }
/*
        stage('Run Routing Pipeline') {
            steps {
                script {
                    def routingResult = build job: 'Routing_Pipeline', wait: true
                    println "Routing Pipeline result: ${routingResult.result}"

                    if (routingResult.result != 'SUCCESS') {
                        error('Routing Pipeline failed')
                    }
                }
            }
        }*/
    }

    post {
        success {
            echo 'Storage, VNets, and Routing modules have been successfully transferred from OCI to Azure!'
        }
        failure {
            echo 'One of the pipelines failed. Check the logs for more details.'
        }
    }
}
